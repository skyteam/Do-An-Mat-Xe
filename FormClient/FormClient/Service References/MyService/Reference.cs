//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormClient.MyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.IBService")]
    public interface IBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBService/LogIn", ReplyAction="http://tempuri.org/IBService/LogInResponse")]
        string LogIn();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBService/LogIn", ReplyAction="http://tempuri.org/IBService/LogInResponse")]
        System.IAsyncResult BeginLogIn(System.AsyncCallback callback, object asyncState);
        
        string EndLogIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBService/GetBangXeXML", ReplyAction="http://tempuri.org/IBService/GetBangXeXMLResponse")]
        string GetBangXeXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBService/GetBangXeXML", ReplyAction="http://tempuri.org/IBService/GetBangXeXMLResponse")]
        System.IAsyncResult BeginGetBangXeXML(System.AsyncCallback callback, object asyncState);
        
        string EndGetBangXeXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBService/ThemXe", ReplyAction="http://tempuri.org/IBService/ThemXeResponse")]
        bool ThemXe(string BienSoXe, string SoMay, string SoKhung, string LoaiXe, string MauXe, string CMNDSoHuu, System.DateTime NgayDangKy, string NoiDangKy, string HoTen, string DiaChi, string DienThoai, System.DateTime NgaySinh);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBService/ThemXe", ReplyAction="http://tempuri.org/IBService/ThemXeResponse")]
        System.IAsyncResult BeginThemXe(string BienSoXe, string SoMay, string SoKhung, string LoaiXe, string MauXe, string CMNDSoHuu, System.DateTime NgayDangKy, string NoiDangKy, string HoTen, string DiaChi, string DienThoai, System.DateTime NgaySinh, System.AsyncCallback callback, object asyncState);
        
        bool EndThemXe(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBServiceChannel : FormClient.MyService.IBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBangXeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBangXeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ThemXeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ThemXeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BServiceClient : System.ServiceModel.ClientBase<FormClient.MyService.IBService>, FormClient.MyService.IBService {
        
        private BeginOperationDelegate onBeginLogInDelegate;
        
        private EndOperationDelegate onEndLogInDelegate;
        
        private System.Threading.SendOrPostCallback onLogInCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBangXeXMLDelegate;
        
        private EndOperationDelegate onEndGetBangXeXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetBangXeXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginThemXeDelegate;
        
        private EndOperationDelegate onEndThemXeDelegate;
        
        private System.Threading.SendOrPostCallback onThemXeCompletedDelegate;
        
        public BServiceClient() {
        }
        
        public BServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LogInCompletedEventArgs> LogInCompleted;
        
        public event System.EventHandler<GetBangXeXMLCompletedEventArgs> GetBangXeXMLCompleted;
        
        public event System.EventHandler<ThemXeCompletedEventArgs> ThemXeCompleted;
        
        public string LogIn() {
            return base.Channel.LogIn();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogIn(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogIn(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLogIn(System.IAsyncResult result) {
            return base.Channel.EndLogIn(result);
        }
        
        private System.IAsyncResult OnBeginLogIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLogIn(callback, asyncState);
        }
        
        private object[] OnEndLogIn(System.IAsyncResult result) {
            string retVal = this.EndLogIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogInCompleted(object state) {
            if ((this.LogInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogInCompleted(this, new LogInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogInAsync() {
            this.LogInAsync(null);
        }
        
        public void LogInAsync(object userState) {
            if ((this.onBeginLogInDelegate == null)) {
                this.onBeginLogInDelegate = new BeginOperationDelegate(this.OnBeginLogIn);
            }
            if ((this.onEndLogInDelegate == null)) {
                this.onEndLogInDelegate = new EndOperationDelegate(this.OnEndLogIn);
            }
            if ((this.onLogInCompletedDelegate == null)) {
                this.onLogInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogInCompleted);
            }
            base.InvokeAsync(this.onBeginLogInDelegate, null, this.onEndLogInDelegate, this.onLogInCompletedDelegate, userState);
        }
        
        public string GetBangXeXML() {
            return base.Channel.GetBangXeXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBangXeXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBangXeXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetBangXeXML(System.IAsyncResult result) {
            return base.Channel.EndGetBangXeXML(result);
        }
        
        private System.IAsyncResult OnBeginGetBangXeXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBangXeXML(callback, asyncState);
        }
        
        private object[] OnEndGetBangXeXML(System.IAsyncResult result) {
            string retVal = this.EndGetBangXeXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBangXeXMLCompleted(object state) {
            if ((this.GetBangXeXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBangXeXMLCompleted(this, new GetBangXeXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBangXeXMLAsync() {
            this.GetBangXeXMLAsync(null);
        }
        
        public void GetBangXeXMLAsync(object userState) {
            if ((this.onBeginGetBangXeXMLDelegate == null)) {
                this.onBeginGetBangXeXMLDelegate = new BeginOperationDelegate(this.OnBeginGetBangXeXML);
            }
            if ((this.onEndGetBangXeXMLDelegate == null)) {
                this.onEndGetBangXeXMLDelegate = new EndOperationDelegate(this.OnEndGetBangXeXML);
            }
            if ((this.onGetBangXeXMLCompletedDelegate == null)) {
                this.onGetBangXeXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBangXeXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetBangXeXMLDelegate, null, this.onEndGetBangXeXMLDelegate, this.onGetBangXeXMLCompletedDelegate, userState);
        }
        
        public bool ThemXe(string BienSoXe, string SoMay, string SoKhung, string LoaiXe, string MauXe, string CMNDSoHuu, System.DateTime NgayDangKy, string NoiDangKy, string HoTen, string DiaChi, string DienThoai, System.DateTime NgaySinh) {
            return base.Channel.ThemXe(BienSoXe, SoMay, SoKhung, LoaiXe, MauXe, CMNDSoHuu, NgayDangKy, NoiDangKy, HoTen, DiaChi, DienThoai, NgaySinh);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginThemXe(string BienSoXe, string SoMay, string SoKhung, string LoaiXe, string MauXe, string CMNDSoHuu, System.DateTime NgayDangKy, string NoiDangKy, string HoTen, string DiaChi, string DienThoai, System.DateTime NgaySinh, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginThemXe(BienSoXe, SoMay, SoKhung, LoaiXe, MauXe, CMNDSoHuu, NgayDangKy, NoiDangKy, HoTen, DiaChi, DienThoai, NgaySinh, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndThemXe(System.IAsyncResult result) {
            return base.Channel.EndThemXe(result);
        }
        
        private System.IAsyncResult OnBeginThemXe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BienSoXe = ((string)(inValues[0]));
            string SoMay = ((string)(inValues[1]));
            string SoKhung = ((string)(inValues[2]));
            string LoaiXe = ((string)(inValues[3]));
            string MauXe = ((string)(inValues[4]));
            string CMNDSoHuu = ((string)(inValues[5]));
            System.DateTime NgayDangKy = ((System.DateTime)(inValues[6]));
            string NoiDangKy = ((string)(inValues[7]));
            string HoTen = ((string)(inValues[8]));
            string DiaChi = ((string)(inValues[9]));
            string DienThoai = ((string)(inValues[10]));
            System.DateTime NgaySinh = ((System.DateTime)(inValues[11]));
            return this.BeginThemXe(BienSoXe, SoMay, SoKhung, LoaiXe, MauXe, CMNDSoHuu, NgayDangKy, NoiDangKy, HoTen, DiaChi, DienThoai, NgaySinh, callback, asyncState);
        }
        
        private object[] OnEndThemXe(System.IAsyncResult result) {
            bool retVal = this.EndThemXe(result);
            return new object[] {
                    retVal};
        }
        
        private void OnThemXeCompleted(object state) {
            if ((this.ThemXeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ThemXeCompleted(this, new ThemXeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ThemXeAsync(string BienSoXe, string SoMay, string SoKhung, string LoaiXe, string MauXe, string CMNDSoHuu, System.DateTime NgayDangKy, string NoiDangKy, string HoTen, string DiaChi, string DienThoai, System.DateTime NgaySinh) {
            this.ThemXeAsync(BienSoXe, SoMay, SoKhung, LoaiXe, MauXe, CMNDSoHuu, NgayDangKy, NoiDangKy, HoTen, DiaChi, DienThoai, NgaySinh, null);
        }
        
        public void ThemXeAsync(string BienSoXe, string SoMay, string SoKhung, string LoaiXe, string MauXe, string CMNDSoHuu, System.DateTime NgayDangKy, string NoiDangKy, string HoTen, string DiaChi, string DienThoai, System.DateTime NgaySinh, object userState) {
            if ((this.onBeginThemXeDelegate == null)) {
                this.onBeginThemXeDelegate = new BeginOperationDelegate(this.OnBeginThemXe);
            }
            if ((this.onEndThemXeDelegate == null)) {
                this.onEndThemXeDelegate = new EndOperationDelegate(this.OnEndThemXe);
            }
            if ((this.onThemXeCompletedDelegate == null)) {
                this.onThemXeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnThemXeCompleted);
            }
            base.InvokeAsync(this.onBeginThemXeDelegate, new object[] {
                        BienSoXe,
                        SoMay,
                        SoKhung,
                        LoaiXe,
                        MauXe,
                        CMNDSoHuu,
                        NgayDangKy,
                        NoiDangKy,
                        HoTen,
                        DiaChi,
                        DienThoai,
                        NgaySinh}, this.onEndThemXeDelegate, this.onThemXeCompletedDelegate, userState);
        }
    }
}
