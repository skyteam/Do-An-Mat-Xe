//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormClient.XService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XeMat", Namespace="http://schemas.datacontract.org/2004/07/FormHost")]
    [System.SerializableAttribute()]
    public partial class XeMat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BienSoXeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMNDSoHuuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DaTimThayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoaiXeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MauXeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoiDangKyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoKhungField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoMayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BienSoXe {
            get {
                return this.BienSoXeField;
            }
            set {
                if ((object.ReferenceEquals(this.BienSoXeField, value) != true)) {
                    this.BienSoXeField = value;
                    this.RaisePropertyChanged("BienSoXe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMNDSoHuu {
            get {
                return this.CMNDSoHuuField;
            }
            set {
                if ((object.ReferenceEquals(this.CMNDSoHuuField, value) != true)) {
                    this.CMNDSoHuuField = value;
                    this.RaisePropertyChanged("CMNDSoHuu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DaTimThay {
            get {
                return this.DaTimThayField;
            }
            set {
                if ((this.DaTimThayField.Equals(value) != true)) {
                    this.DaTimThayField = value;
                    this.RaisePropertyChanged("DaTimThay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoaiXe {
            get {
                return this.LoaiXeField;
            }
            set {
                if ((object.ReferenceEquals(this.LoaiXeField, value) != true)) {
                    this.LoaiXeField = value;
                    this.RaisePropertyChanged("LoaiXe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MauXe {
            get {
                return this.MauXeField;
            }
            set {
                if ((object.ReferenceEquals(this.MauXeField, value) != true)) {
                    this.MauXeField = value;
                    this.RaisePropertyChanged("MauXe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoiDangKy {
            get {
                return this.NoiDangKyField;
            }
            set {
                if ((object.ReferenceEquals(this.NoiDangKyField, value) != true)) {
                    this.NoiDangKyField = value;
                    this.RaisePropertyChanged("NoiDangKy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoKhung {
            get {
                return this.SoKhungField;
            }
            set {
                if ((object.ReferenceEquals(this.SoKhungField, value) != true)) {
                    this.SoKhungField = value;
                    this.RaisePropertyChanged("SoKhung");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoMay {
            get {
                return this.SoMayField;
            }
            set {
                if ((object.ReferenceEquals(this.SoMayField, value) != true)) {
                    this.SoMayField = value;
                    this.RaisePropertyChanged("SoMay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChuXe", Namespace="http://schemas.datacontract.org/2004/07/FormHost")]
    [System.SerializableAttribute()]
    public partial class ChuXe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMNDSoHuuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiaChiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DienThoaiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoTenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NgaySinhField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMNDSoHuu {
            get {
                return this.CMNDSoHuuField;
            }
            set {
                if ((object.ReferenceEquals(this.CMNDSoHuuField, value) != true)) {
                    this.CMNDSoHuuField = value;
                    this.RaisePropertyChanged("CMNDSoHuu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiaChi {
            get {
                return this.DiaChiField;
            }
            set {
                if ((object.ReferenceEquals(this.DiaChiField, value) != true)) {
                    this.DiaChiField = value;
                    this.RaisePropertyChanged("DiaChi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DienThoai {
            get {
                return this.DienThoaiField;
            }
            set {
                if ((object.ReferenceEquals(this.DienThoaiField, value) != true)) {
                    this.DienThoaiField = value;
                    this.RaisePropertyChanged("DienThoai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoTen {
            get {
                return this.HoTenField;
            }
            set {
                if ((object.ReferenceEquals(this.HoTenField, value) != true)) {
                    this.HoTenField = value;
                    this.RaisePropertyChanged("HoTen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NgaySinh {
            get {
                return this.NgaySinhField;
            }
            set {
                if ((this.NgaySinhField.Equals(value) != true)) {
                    this.NgaySinhField = value;
                    this.RaisePropertyChanged("NgaySinh");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="XService.IBService")]
    public interface IBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBService/ThemXe", ReplyAction="http://tempuri.org/IBService/ThemXeResponse")]
        bool ThemXe(FormClient.XService.XeMat Xe, FormClient.XService.ChuXe People);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBService/TimXeTheoCMND", ReplyAction="http://tempuri.org/IBService/TimXeTheoCMNDResponse")]
        FormClient.XService.XeMat[] TimXeTheoCMND(string CMND);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBServiceChannel : FormClient.XService.IBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BServiceClient : System.ServiceModel.ClientBase<FormClient.XService.IBService>, FormClient.XService.IBService {
        
        public BServiceClient() {
        }
        
        public BServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ThemXe(FormClient.XService.XeMat Xe, FormClient.XService.ChuXe People) {
            return base.Channel.ThemXe(Xe, People);
        }
        
        public FormClient.XService.XeMat[] TimXeTheoCMND(string CMND) {
            return base.Channel.TimXeTheoCMND(CMND);
        }
    }
}
